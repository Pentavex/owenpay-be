swagger: "2.0"
info:
  description: owenpay
  version: "1.0.0"
  title: owenpay
host: owenpay.pentavex.com
basePath: /owenpay
schemes:
- http
paths:
  /user/create:
    post:
      summary: Create a user
      operationId: createUser
      consumes:
      -  application/json
      produces:
      -  application/json
      parameters:
      - in: body
        name: createUserRequest
        description: Credentials
        required: true
        schema:
          $ref: "#/definitions/CreateUserRequest"
      responses:
        "200":
          description: Successful operation
          schema:
            $ref: "#/definitions/GeneralResponse"
  /user/all:
    get:
      summary: Get all users by first and last name
      operationId: getUsers
      produces:
      - application/json
      responses:
        200:
          description: Successful operation
          schema:
            $ref: "#/definitions/GeneralResponse"
        400:
          description: Invalid username supplied
        404:
          description: User not found
  /group/create:
    post:
      summary: Create a group
      operationId: createGroup
      consumes:
      - application/json
      produces:
      - application/json
      parameters:
      - in: body
        name: createGroupRequest
        description: Group Name
        required: true
        schema:
          $ref: "#/definitions/CreateGroupRequest"
      responses:
        "200":
          description: Successful operation
          schema:
            $ref: "#/definitions/GeneralResponse"
  /group/addUser:
    post:
      summary: Add user to a group
      operationId: addUserToGroup
      produces:
      - application/json
      parameters:
      - in: body
        name: addUserToGroupRequest
        description: User and Group ID
        required: true
        schema:
          $ref: "#/definitions/AddUserToGroupRequest"
      responses:
        200:
          description: Successful operation
          schema:
            $ref: "#/definitions/GeneralResponse"
  /group/listUsers:
    post:
      summary: Get members of a group
      operationId: getUserList
      produces:
      - application/json
      parameters:
      - in: body
        name: groupListUsersRequest
        description: Group Id
        required: true
        schema:
          $ref: "#/definitions/GroupListUsersRequest"
      responses:
        200:
          description: Successful operation
          schema:
            $ref: "#/definitions/GeneralResponse"

definitions:
  CreateUserRequest:
    type: object
    properties:
      username:
        type: string
      password:
        type: string
    required:
      - username
      - password

  CreateGroupRequest:
    type: object
    properties:
      groupname:
        type: string
      username:
        type: string
    required:
    - groupname
    - username

  AddUserToGroupRequest:
    type: object
    properties:
      userId:
        type: integer
        format: int64
      groupId:
        type: integer
        format: int64
    required:
    - userId
    - groupId

  GroupListUsersRequest:
    type: object
    properties:
      groupId:
        type: integer
        format: int64
    required:
    - groupId

  GeneralResponse:
    type: object
    properties:
      message:
        type: string
        description: message
